I"W<p><a href="https://www.acmicpc.net/problem/3997">https://www.acmicpc.net/problem/3997</a></p>

<p>DP 문제인 줄 알고 헤맸었는데, 아이디어성 문제입니다.</p>

<ul>
  <li>아이디어</li>
</ul>

<ol>
  <li>
    <p>문자의 개수가 총 52개이기 때문에 [1,x] 구간에서 문자가 출현한 횟수의 홀짝성을 long long 정수에 저장할 수 있습니다. (52개 알파벳을 [0,52) 에 매칭한 후, 해당 자리수의 비트를 홀수일때 1, 짝수일때 0로 합니다.)</p>
  </li>
  <li>
    <p>[i,j] 구간에서의 홀짝성은 [1,j] xor [1,i-1]과 같습니다. 이때 하이퍼드롬이 되려면 [i,j] 구간에서 홀수의 개수는 0또는 1이여야만 합니다.
따라서 [1,i-1]의 홀짝성은 [1,j] xor 0 , 또는 [1,j] xor (1«k) ($ 0 \leq k &lt; 52 $) 인 53가지 경우만 가능합니다.</p>
  </li>
</ol>

<p>map에 지금까지 나왔던 홀짝성들(long long 정수)을 모두 저장해두고 찾으면 O(53nlog(n)) 시간복잡도로 풀 수 있겠네요.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include&lt;bits/stdc++.h&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="k">typedef</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">ll</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">ALPHA</span><span class="o">=</span><span class="mi">26</span><span class="p">;</span>
<span class="n">map</span><span class="o">&lt;</span><span class="n">ll</span><span class="p">,</span><span class="n">ll</span><span class="o">&gt;</span> <span class="n">vst</span><span class="p">;</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">){</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
	<span class="kt">int</span> <span class="n">n</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="p">;</span>
	<span class="n">string</span> <span class="n">s</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">s</span><span class="p">;</span>
	<span class="n">ll</span> <span class="n">x</span><span class="o">=</span><span class="mi">0LL</span><span class="p">,</span><span class="n">ans</span><span class="o">=</span><span class="mi">0LL</span><span class="p">;</span>
	<span class="n">vst</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">1LL</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="kt">int</span> <span class="n">a</span><span class="o">=</span><span class="p">(</span><span class="n">islower</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">?</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="sc">'a'</span><span class="o">:</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="sc">'A'</span><span class="o">+</span><span class="n">ALPHA</span><span class="p">);</span>
		<span class="n">x</span><span class="o">^=</span><span class="p">(</span><span class="mi">1LL</span><span class="o">&lt;&lt;</span><span class="n">a</span><span class="p">);</span>
		<span class="n">ans</span><span class="o">+=</span><span class="n">vst</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">*</span><span class="mi">26</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
			<span class="k">if</span><span class="p">(</span><span class="n">vst</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">x</span><span class="o">^</span><span class="p">(</span><span class="mi">1LL</span><span class="o">&lt;&lt;</span><span class="n">j</span><span class="p">))</span><span class="o">!=</span><span class="n">vst</span><span class="p">.</span><span class="n">end</span><span class="p">())</span> <span class="n">ans</span><span class="o">+=</span><span class="n">vst</span><span class="p">[</span><span class="n">x</span><span class="o">^</span><span class="p">(</span><span class="mi">1LL</span><span class="o">&lt;&lt;</span><span class="n">j</span><span class="p">)];</span>
		<span class="p">}</span>
		<span class="n">vst</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">ans</span><span class="p">;</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET