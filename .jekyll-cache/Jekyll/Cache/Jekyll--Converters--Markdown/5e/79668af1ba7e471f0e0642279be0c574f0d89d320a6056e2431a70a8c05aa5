I""*<p><a href="https://www.acmicpc.net/problem/17398">https://www.acmicpc.net/problem/17398</a></p>

<p>숭고한 공식 풀이는 <a href="https://drive.google.com/file/d/1XwcQgX81fR_2ULyzXoY1DZ1Y9EsXyu-_/view">여기</a>서 보실 수 있습니다.</p>

<p>거꾸로 생각하면 쉬운 union find 문제입니다. 각 그룹에 포함되어 있는 노드의 개수를 저장하고 있다가, 두 노드가 연결될 때 집합이 새로 합쳐진다면 비용이 발생하게 됩니다.</p>

<p>처음에는 모두 연결되어 있는 상태이므로 쿼리를 오프라인 쿼리로 저장한 뒤 쿼리에 나타나지 않는 간선들은 비용 고려 없이 모두 연결해 두어야 합니다. (쿼리에 나타나는 간선들은 쿼리 순으로 계산하면서 비용을 고려해 주면 되겠죠?)</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include&lt;bits/stdc++.h&gt;
#define ff first
#define ss second
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="k">typedef</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">ll</span><span class="p">;</span>
<span class="k">typedef</span> <span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">pii</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">SZ</span><span class="o">=</span><span class="mi">100005</span><span class="p">;</span>
<span class="n">pii</span> <span class="n">cnt</span><span class="p">[</span><span class="n">SZ</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">par</span><span class="p">[</span><span class="n">SZ</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">qry</span><span class="p">[</span><span class="n">SZ</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">vst</span><span class="p">[</span><span class="n">SZ</span><span class="p">];</span>
<span class="n">ll</span> <span class="n">ch</span><span class="p">[</span><span class="n">SZ</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
<span class="kt">int</span> <span class="nf">find</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">){</span>
	<span class="k">if</span><span class="p">(</span><span class="n">x</span><span class="o">==</span><span class="n">par</span><span class="p">[</span><span class="n">x</span><span class="p">])</span> <span class="k">return</span> <span class="n">x</span><span class="p">;</span>
	<span class="k">return</span> <span class="n">par</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">find</span><span class="p">(</span><span class="n">par</span><span class="p">[</span><span class="n">x</span><span class="p">]);</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">merge</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">){</span>
	<span class="n">x</span><span class="o">=</span><span class="n">find</span><span class="p">(</span><span class="n">x</span><span class="p">);</span> <span class="n">y</span><span class="o">=</span><span class="n">find</span><span class="p">(</span><span class="n">y</span><span class="p">);</span>
	<span class="k">if</span><span class="p">(</span><span class="n">x</span><span class="o">==</span><span class="n">y</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
	<span class="n">par</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">x</span><span class="p">;</span>
	<span class="n">ch</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">+=</span><span class="n">ch</span><span class="p">[</span><span class="n">y</span><span class="p">];</span>
	<span class="n">ch</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">){</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
	<span class="kt">int</span> <span class="n">m</span><span class="p">,</span><span class="n">q</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="o">&gt;&gt;</span><span class="n">m</span><span class="o">&gt;&gt;</span><span class="n">q</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">par</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
		<span class="n">ch</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">1LL</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">m</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">ff</span><span class="o">&gt;&gt;</span><span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">ss</span><span class="p">;</span>
	<span class="n">ll</span> <span class="n">ans</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">q</span><span class="p">;</span><span class="n">i</span><span class="o">&gt;=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">--</span><span class="p">){</span>
		<span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">qry</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
		<span class="n">vst</span><span class="p">[</span><span class="n">qry</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">m</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="k">if</span><span class="p">(</span><span class="n">vst</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
		<span class="n">merge</span><span class="p">(</span><span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">ff</span><span class="p">,</span><span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">ss</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">q</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="kt">int</span> <span class="n">p1</span><span class="o">=</span><span class="n">find</span><span class="p">(</span><span class="n">cnt</span><span class="p">[</span><span class="n">qry</span><span class="p">[</span><span class="n">i</span><span class="p">]].</span><span class="n">ff</span><span class="p">);</span>
		<span class="kt">int</span> <span class="n">p2</span><span class="o">=</span><span class="n">find</span><span class="p">(</span><span class="n">cnt</span><span class="p">[</span><span class="n">qry</span><span class="p">[</span><span class="n">i</span><span class="p">]].</span><span class="n">ss</span><span class="p">);</span>
		<span class="n">ans</span><span class="o">+=</span><span class="p">(</span><span class="n">p1</span><span class="o">==</span><span class="n">p2</span><span class="o">?</span><span class="mi">0LL</span><span class="o">:</span><span class="n">ch</span><span class="p">[</span><span class="n">p1</span><span class="p">]</span> <span class="o">*</span> <span class="n">ch</span><span class="p">[</span><span class="n">p2</span><span class="p">]);</span>
		<span class="n">merge</span><span class="p">(</span><span class="n">cnt</span><span class="p">[</span><span class="n">qry</span><span class="p">[</span><span class="n">i</span><span class="p">]].</span><span class="n">ff</span><span class="p">,</span><span class="n">cnt</span><span class="p">[</span><span class="n">qry</span><span class="p">[</span><span class="n">i</span><span class="p">]].</span><span class="n">ss</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">ans</span><span class="p">;</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET