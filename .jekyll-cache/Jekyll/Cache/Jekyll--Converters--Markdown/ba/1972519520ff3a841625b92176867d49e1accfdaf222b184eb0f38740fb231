I"L6<p><a href="https://www.acmicpc.net/problem/17400">https://www.acmicpc.net/problem/17400</a></p>

<p>숭고한 공식 풀이는 <a href="https://drive.google.com/file/d/1XwcQgX81fR_2ULyzXoY1DZ1Y9EsXyu-_/view">여기</a>서 보실 수 있습니다.</p>

<p>segment tree 문제입니다. segment tree에 관련된 내용은 <a href="https://cyberflower.github.io/2019/07/22/seg,lazy.html">여기</a>서 보실 수 있습니다.</p>

<p>하나의 세그먼트 트리를 이용하여도 풀리지만, 직관적으로 짝수번째 index를 갖는 공연자의 카리스마의 합을 저장하는 세그먼트 트리, 홀수번째 index를 갖는 공연자의 카리스마의 합을 저장하는 세그먼트 트리 2개를 만들었습니다.</p>

<p>인덱스 x를 (x+1)//2 에 저장하였습니다. (즉, 1은 홀수에서 1, 2는 짝수에서 1, 3은 홀수에서 2 …)</p>

<p>따라서 구간 [l,r]=odd[l//2+1,(r+1)//2] + even[l//2+1,(r+1)//2] 로 나타낼 수 있습니다.</p>

<p>(l,r이 (짝수,짝수),(짝수,홀수),(홀수,짝수),(홀수,홀수) 4가지 경우를 나누어 구간을 구해도 무방합니다. )</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include&lt;bits/stdc++.h&gt;
</span><span class="k">typedef</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">ll</span><span class="p">;</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">SZ</span><span class="o">=</span><span class="mi">300005</span><span class="p">;</span>
<span class="n">ll</span> <span class="n">seg_odd</span><span class="p">[</span><span class="mi">4</span><span class="o">*</span><span class="n">SZ</span><span class="p">];</span>
<span class="n">ll</span> <span class="n">seg_even</span><span class="p">[</span><span class="mi">4</span><span class="o">*</span><span class="n">SZ</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="n">q</span><span class="p">;</span>
<span class="kt">void</span> <span class="nf">seg_update</span><span class="p">(</span><span class="n">ll</span> <span class="o">*</span><span class="n">seg</span><span class="p">,</span> <span class="kt">int</span> <span class="n">idx</span><span class="p">,</span> <span class="kt">int</span> <span class="n">l</span><span class="p">,</span> <span class="kt">int</span> <span class="n">r</span><span class="p">,</span> <span class="kt">int</span> <span class="n">f</span><span class="p">,</span> <span class="n">ll</span> <span class="n">d</span><span class="p">){</span>
	<span class="k">if</span><span class="p">(</span><span class="n">f</span><span class="o">&lt;</span><span class="n">l</span> <span class="o">||</span> <span class="n">r</span><span class="o">&lt;</span><span class="n">f</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
	<span class="n">seg</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span><span class="o">+=</span><span class="n">d</span><span class="p">;</span>
	<span class="k">if</span><span class="p">(</span><span class="n">l</span><span class="o">==</span><span class="n">r</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
	<span class="n">seg_update</span><span class="p">(</span><span class="n">seg</span><span class="p">,</span><span class="n">idx</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="n">l</span><span class="p">,(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="n">f</span><span class="p">,</span><span class="n">d</span><span class="p">);</span>
	<span class="n">seg_update</span><span class="p">(</span><span class="n">seg</span><span class="p">,</span><span class="n">idx</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">,(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">f</span><span class="p">,</span><span class="n">d</span><span class="p">);</span>
<span class="p">}</span>
<span class="n">ll</span> <span class="nf">seg_find</span><span class="p">(</span><span class="n">ll</span> <span class="o">*</span><span class="n">seg</span><span class="p">,</span> <span class="kt">int</span> <span class="n">idx</span><span class="p">,</span> <span class="kt">int</span> <span class="n">l</span><span class="p">,</span> <span class="kt">int</span> <span class="n">r</span><span class="p">,</span> <span class="kt">int</span> <span class="n">fl</span><span class="p">,</span> <span class="kt">int</span> <span class="n">fr</span><span class="p">){</span>
	<span class="k">if</span><span class="p">(</span><span class="n">r</span><span class="o">&lt;</span><span class="n">fl</span> <span class="o">||</span> <span class="n">fr</span><span class="o">&lt;</span><span class="n">l</span><span class="p">)</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
	<span class="k">if</span><span class="p">(</span><span class="n">fl</span><span class="o">&lt;=</span><span class="n">l</span> <span class="o">&amp;&amp;</span> <span class="n">r</span><span class="o">&lt;=</span><span class="n">fr</span><span class="p">)</span> <span class="k">return</span> <span class="n">seg</span><span class="p">[</span><span class="n">idx</span><span class="p">];</span>
	<span class="k">return</span> <span class="n">seg_find</span><span class="p">(</span><span class="n">seg</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="n">idx</span><span class="p">,</span><span class="n">l</span><span class="p">,(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="n">fl</span><span class="p">,</span><span class="n">fr</span><span class="p">)</span><span class="o">+</span><span class="n">seg_find</span><span class="p">(</span><span class="n">seg</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="n">idx</span><span class="o">+</span><span class="mi">1</span><span class="p">,(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">fl</span><span class="p">,</span><span class="n">fr</span><span class="p">);</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">){</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
	<span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="o">&gt;&gt;</span><span class="n">q</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">ll</span> <span class="n">x</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">x</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span> <span class="n">seg_update</span><span class="p">(</span><span class="n">seg_odd</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="n">x</span><span class="p">);</span>
		<span class="k">else</span> <span class="n">seg_update</span><span class="p">(</span><span class="n">seg_even</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="n">i</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="n">x</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">while</span><span class="p">(</span><span class="n">q</span><span class="o">--</span><span class="p">){</span>
		<span class="kt">int</span> <span class="n">xx</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">xx</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="n">xx</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span>
			<span class="kt">int</span> <span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">l</span><span class="o">&gt;&gt;</span><span class="n">r</span><span class="p">;</span>
			<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">llabs</span><span class="p">(</span><span class="n">seg_find</span><span class="p">(</span><span class="n">seg_odd</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="n">l</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">,(</span><span class="n">r</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">-</span><span class="n">seg_find</span><span class="p">(</span><span class="n">seg_even</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,(</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="n">r</span><span class="o">/</span><span class="mi">2</span><span class="p">))</span><span class="o">&lt;&lt;</span><span class="sc">'\n'</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">else</span><span class="p">{</span>
			<span class="kt">int</span> <span class="n">f</span><span class="p">,</span><span class="n">d</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">f</span><span class="o">&gt;&gt;</span><span class="n">d</span><span class="p">;</span>
			<span class="k">if</span><span class="p">(</span><span class="n">f</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span> <span class="n">seg_update</span><span class="p">(</span><span class="n">seg_odd</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,(</span><span class="n">f</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="n">d</span><span class="p">);</span>
			<span class="k">else</span> <span class="n">seg_update</span><span class="p">(</span><span class="n">seg_even</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="n">f</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="n">d</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET