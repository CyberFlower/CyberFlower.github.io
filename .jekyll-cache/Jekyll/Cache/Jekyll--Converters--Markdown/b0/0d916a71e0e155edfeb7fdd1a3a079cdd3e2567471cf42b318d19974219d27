I"6<h3 id="divide--conquer-dp-optimization-알고리즘">Divide &amp; Conquer DP Optimization 알고리즘</h3>
<hr />

<p>지난 Knuth Optimization에 이어 이번에는 Divide &amp; Conquer Optimization에 대해 소개하도록 하겠다.</p>

<h3 id="1-예시-문제-김치boj-11001">1. 예시 문제: 김치(BOJ 11001)</h3>
<p><a href="https://www.acmicpc.net/problem/11001">https://www.acmicpc.net/problem/11001</a></p>

<p>이 문제는 $1 \leq q \leq p \leq N, p \leq q+D$일 때 $max(T[p]*(q-p)+V[q])$를 구하는 문제이다.
이를 단순히 반복문만을 이용하여 해결하게 되면 $O(N^2)$으로 TLE가 나게 된다.</p>

<h3 id="2-divide--conquer-optimization의-조건과-최적화">2. Divide &amp; Conquer Optimization의 조건과 최적화</h3>
<p>Divide &amp; Conquer Optimization은 점화식이 다음과 같은 조건을 만족할 때 사용할 수 있다.</p>

<p>조건 1)
$DP[t][i]=min_{k&lt;i}(DP[t-1][k]+C[k][i])$</p>

<p>조건 2)
$A[t][i]=C[t][i]$를 만족시키는 최소 $k$라고 할 때 $A[t][i] \leq A[t][i+1]$가 만족</p>

<p>조건 2’)
$a \leq b \leq c \leq d$ 일때 $C[a][c]+C[b][d] \leq C[a][d]+C[b][c]$ 를 만족한다.</p>

<p>조건 1과 조건 2나 조건 2’을 만족하면, $DP[t][i]$를 계산했을 때 $k=p$일때 최소값이 나왔다면, $DP[t][x&lt;i]$를 구할 때에는 $k \leq p$에 대해서만 살펴보면 되고, $DP[t][x&gt;i]$를 구할 때에는 $k \le p$에 대해서만 살펴보면 된다.</p>

<p>따라서 이를 이용하면 $O(KN^{2})$의 DP를 $O(KNlgN)$까지 줄일 수 있다. 이 때의 코드는 다음과 같다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include&lt;bits/stdc++.h&gt;
#define MAXN 5000
#define MAXK 1000
#define oo 1987654321
</span><span class="k">typedef</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">ll</span><span class="p">;</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">DP</span><span class="p">[</span><span class="n">MAXK</span><span class="p">][</span><span class="n">MAXN</span><span class="p">],</span><span class="n">C</span><span class="p">[</span><span class="n">MAXN</span><span class="p">][</span><span class="n">MAXN</span><span class="p">];</span>
<span class="kt">void</span> <span class="nf">dc_opt</span><span class="p">(</span><span class="kt">int</span> <span class="n">t</span><span class="p">,</span><span class="kt">int</span> <span class="n">s</span><span class="p">,</span><span class="kt">int</span> <span class="n">e</span><span class="p">,</span><span class="kt">int</span> <span class="n">l</span><span class="p">,</span><span class="kt">int</span> <span class="n">r</span><span class="p">)</span> <span class="c1">// DP[t][s~e]를 k의 범위 p~q 내에서 계산한다.</span>
<span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="o">&gt;</span><span class="n">e</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">s</span><span class="o">+</span><span class="n">e</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
    <span class="n">DP</span><span class="p">[</span><span class="n">t</span><span class="p">][</span><span class="n">mid</span><span class="p">]</span><span class="o">=</span><span class="n">oo</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">v</span><span class="p">,</span><span class="n">w</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="n">l</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;=</span><span class="n">min</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="n">k</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
      <span class="n">v</span><span class="o">=</span><span class="n">DP</span><span class="p">[</span><span class="n">t</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">+</span><span class="n">C</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">mid</span><span class="p">];</span>
      <span class="k">if</span><span class="p">(</span><span class="n">DP</span><span class="p">[</span><span class="n">t</span><span class="p">][</span><span class="n">mid</span><span class="p">]</span><span class="o">&gt;</span><span class="n">v</span><span class="p">)</span> <span class="n">DP</span><span class="p">[</span><span class="n">t</span><span class="p">][</span><span class="n">mid</span><span class="p">]</span><span class="o">=</span><span class="n">v</span><span class="p">,</span><span class="n">w</span><span class="o">=</span><span class="n">k</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">dc_opt</span><span class="p">(</span><span class="n">t</span><span class="p">,</span><span class="n">s</span><span class="p">,</span><span class="n">mid</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">w</span><span class="p">);</span>
    <span class="n">dc_opt</span><span class="p">(</span><span class="n">t</span><span class="p">,</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">e</span><span class="p">,</span><span class="n">w</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="3-divide--conquer-optimization의-사용">3. Divide &amp; Conquer Optimization의 사용</h3>

<p>우선 김치 문제를 $O(N^{2})$로 해결할 때 사용했던 식을 다시 한 번 살펴보자.
\(max(T[p]\*(q-p)+V[q]\)</p>

<p>일단 $C[q][p]=T[p]*(q-p)+V[q]$라고 하면, $a \leq b \leq c \leq d$ 일때  $C[a][c]+C[b][d]-C[a][d]+C[b][c] \le 0$을 언제나 만족함을 확인할 수 있다.</p>

<p>따라서 $T’[i]=-T[i]$, $V’[i]=-V[i]$로 재정의하면, 구하는 것은 $-min(T’[p]*(q-p)+V’[q]$ 가 되고, $C’[q][p]$는 $C’[a][c]+C’[b][d]-C’[a][d]+C’[b][c] \leq 0$을 만족한다.</p>

<p>$DP[p]=-min(T’[p]*(q-p)+V’[q]$라고 두면 이를 이용하여 문제를 해결할 수 있다.</p>

<p>단 이 때 $D$ 조건을 고려하여 가능한 $q$의 범위를 적당히 잘 설정해주어야 한다.</p>

<p>코드는 다음과 같다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include&lt;bits/stdc++.h&gt;
#define oo 1987654321
</span><span class="k">typedef</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">ll</span><span class="p">;</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">N</span><span class="p">,</span><span class="n">D</span><span class="p">,</span><span class="n">DP</span><span class="p">[</span><span class="mi">111111</span><span class="p">];</span>
<span class="kt">long</span> <span class="kt">long</span> <span class="n">T</span><span class="p">[</span><span class="mi">111111</span><span class="p">],</span><span class="n">V</span><span class="p">[</span><span class="mi">111111</span><span class="p">],</span><span class="n">ans</span><span class="p">;</span>
<span class="kt">void</span> <span class="nf">dc_opt</span><span class="p">(</span><span class="kt">int</span> <span class="n">s</span><span class="p">,</span> <span class="kt">int</span> <span class="n">e</span><span class="p">,</span> <span class="kt">int</span> <span class="n">l</span><span class="p">,</span> <span class="kt">int</span> <span class="n">r</span><span class="p">)</span><span class="c1">//DP[s]~DP[e]를 구하는 함수, 이 때 k의 범위</span>
<span class="p">{</span>
  <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="o">&gt;</span><span class="n">e</span><span class="p">)</span> <span class="k">return</span> <span class="p">;</span>
  <span class="kt">int</span> <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">s</span><span class="o">+</span><span class="n">e</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
  <span class="n">ll</span> <span class="n">maxi</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">tp</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">max</span><span class="p">(</span><span class="n">l</span><span class="p">,</span><span class="n">mid</span><span class="o">-</span><span class="n">D</span><span class="p">);</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">min</span><span class="p">(</span><span class="n">mid</span><span class="p">,</span><span class="n">r</span><span class="p">);</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">T</span><span class="p">[</span><span class="n">mid</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="n">mid</span><span class="o">-</span><span class="n">i</span><span class="p">)</span><span class="o">+</span><span class="n">V</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">&gt;</span><span class="n">maxi</span><span class="p">)</span> <span class="n">maxi</span><span class="o">=</span><span class="n">T</span><span class="p">[</span><span class="n">mid</span><span class="p">]</span><span class="err">\</span><span class="o">*</span><span class="p">(</span><span class="n">mid</span><span class="o">-</span><span class="n">i</span><span class="p">)</span><span class="o">+</span><span class="n">V</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">tp</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">if</span><span class="p">(</span><span class="n">ans</span><span class="o">&lt;</span><span class="n">maxi</span><span class="p">)</span> <span class="n">ans</span><span class="o">=</span><span class="n">maxi</span><span class="p">;</span>
  <span class="n">dp_opt</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="n">mid</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">tp</span><span class="p">);</span>
  <span class="n">dp_opt</span><span class="p">(</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">e</span><span class="p">,</span><span class="n">tp</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
 	<span class="n">scanf</span><span class="p">(</span><span class="s">"%d %d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">N</span><span class="p">,</span><span class="o">&amp;</span><span class="n">D</span><span class="p">);</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">N</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">N</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">V</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
  <span class="n">dc_opt</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">N</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">N</span><span class="p">);</span>
  <span class="n">printf</span><span class="p">(</span><span class="s">"%lld"</span><span class="p">,</span><span class="n">ans</span><span class="p">);</span>
<span class="p">}</span>

</code></pre></div></div>
:ET