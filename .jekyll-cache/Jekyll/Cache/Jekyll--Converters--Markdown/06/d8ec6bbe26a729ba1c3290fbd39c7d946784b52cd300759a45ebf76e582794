I"E<p><a href="https://www.acmicpc.net/problem/2300">https://www.acmicpc.net/problem/2300</a></p>

<p>DP 문제를 너무 팀원에게 맡기는 것 같아서 쉬운 DP문제를 하나 풀었습니다. 코드 최적화가 익숙해지면 쉬운 문제지만 아니라면 조금 막힐수도 있습니다.</p>

<p>$ O(N^2) $ 의 풀이로 풀 수 있습니다. 1번-n번 기지국의 설치 비용은 1번-i번의 설치 비용+(i+1번-n번 설치 비용) 중 최솟값과 같기 때문입니다.</p>

<p>i+1번-n번 기지국의 설치 비용을 계산하는 복잡도가 $ O(1) $ 임에 유의합시다. 설치 비용은 i+1번-n번 기지국에서 x좌표의 차이 또는 해당 구간에서 가장 큰 y좌표의 절대값 * 2 중 하나인데 둘 다 $ O(1) $ 에 구할 수 있습니다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include&lt;bits/stdc++.h&gt;
#define ff first
#define ss second
#define INF (int)1e9+5
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="k">typedef</span> <span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">pii</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">SZ</span><span class="o">=</span><span class="mi">10005</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">memo</span><span class="p">[</span><span class="n">SZ</span><span class="p">];</span>
<span class="n">pii</span> <span class="n">arr</span><span class="p">[</span><span class="n">SZ</span><span class="p">];</span>
<span class="kt">int</span> <span class="nf">dp</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
   <span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
   <span class="k">if</span><span class="p">(</span><span class="n">memo</span><span class="p">[</span><span class="n">n</span><span class="p">]</span><span class="o">!=-</span><span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="n">memo</span><span class="p">[</span><span class="n">n</span><span class="p">];</span>
   <span class="kt">int</span> <span class="n">mn</span><span class="o">=</span><span class="n">INF</span><span class="p">;</span>
   <span class="kt">int</span> <span class="n">mxy</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
   <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">&gt;=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">--</span><span class="p">){</span>
      <span class="n">mxy</span><span class="o">=</span><span class="n">max</span><span class="p">(</span><span class="n">mxy</span><span class="p">,</span><span class="n">abs</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">ss</span><span class="p">));</span>
      <span class="n">mn</span><span class="o">=</span><span class="n">min</span><span class="p">(</span><span class="n">mn</span><span class="p">,</span><span class="n">dp</span><span class="p">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="n">max</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">n</span><span class="p">].</span><span class="n">ff</span><span class="o">-</span><span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">ff</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="n">mxy</span><span class="p">));</span>
   <span class="p">}</span>
   <span class="k">return</span> <span class="n">memo</span><span class="p">[</span><span class="n">n</span><span class="p">]</span><span class="o">=</span><span class="n">mn</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">){</span>
   <span class="n">ios_base</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
   <span class="n">memset</span><span class="p">(</span><span class="n">memo</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">memo</span><span class="p">));</span>
   <span class="kt">int</span> <span class="n">n</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="p">;</span>
   <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
      <span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">x</span><span class="o">&gt;&gt;</span><span class="n">y</span><span class="p">;</span>
      <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">};</span>
   <span class="p">}</span>
   <span class="n">sort</span><span class="p">(</span><span class="n">arr</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">arr</span><span class="o">+</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
   <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">dp</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET